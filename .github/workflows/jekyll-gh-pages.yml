name: Jekyll with GitHub Pages dependencies preinstalled

on:
  workflow_dispatch:
  workflow_call:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: copy GHP configs
        run: | 
          if test -d "ghp/" ; then 
            echo "Branch: $(git branch --show-current) -- hash: $(git rev-parse HEAD)"
            echo "before submodule: $(cd ghp && git branch)"
            git submodule update --init --recursive
            echo "after submodule: $(git rev-parse HEAD:./ghp)"
            echo "Gemfile: $(cat Gemfile)"
            echo "ls: $(ls -l Gemfile)"
            rm -rf Gemfile 
            echo "$(ls -a Gemfile)" 
            cp -rf ghp/Gemfile . 
            echo "$(cat Gemfile)"
            echo "ls: $(ls -l Gemfile)"
            rm -rf _config.yml && cp -rf ghp/_config.yml . && echo "copied ghp/_config.yml"
            rm -rf _includes && cp -rf ghp/_includes . && echo "copied ghp/_includes"
            rm -rf _layouts && cp -rf ghp/_layouts . && echo "copied ghp/_layouts"
            rm -rf favicon && cp -rf ghp/favicon.ico . && echo "copied ghp/favicon.ico"
            echo "git status: $(git status --short)"
            if [[ -n $(git status --short) ]]; then
              git config user.name 'github'
              git config user.email 'noreply@github.com'
              git add .
              git commit -am "Git Action update"
              echo "hash: $(git rev-parse HEAD)"
            fi
            echo 'Done copying ghp/'
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
            
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
